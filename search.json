[{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"load-the-necessary-packages","dir":"Articles","previous_headings":"","what":"Load the necessary packages","title":"Introduction to ZeitZeiger","text":"First let’s load necessary packages.","code":"library('data.table') library('ggplot2') library('zeitzeiger')  doParallel::registerDoParallel(cores = 2) # register a parallel backend to minimize runtime"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"generate-example-data","dir":"Articles","previous_headings":"","what":"Generate example data","title":"Introduction to ZeitZeiger","text":"Now ’ll simulate data oscillatory system. simulated data 100 observations, measurements 200 features 10 time-points per period. feature Gaussian noise. ’ll call periodic variable “time,” go 0 1. oscillator produce three patterns: sine, cosine, cosine twice frequency. three patterns, two features relatively strong signal eight relatively weak signal.","code":"nObs = 100 nFeatures = 200 amp = 0.5  time = rep((0:9) / 10, length.out = nObs) set.seed(42) x = matrix(rnorm(nObs * nFeatures, sd = 0.7), nrow = nObs) baseSignal = sin(time * 2 * pi) x[, 1] = x[, 1] + 3 * baseSignal x[, 2] = x[, 2] - 0.5 * baseSignal for (ii in 3:10) {   x[, ii] = x[, ii] + runif(1, -amp, amp) * baseSignal}  baseSignal = cos(time * 2 * pi) x[, 11] = x[, 11] + 2 * baseSignal x[, 12] = x[, 12] - baseSignal for (ii in 13:20) {   x[, ii] = x[, ii] + runif(1, -amp, amp) * baseSignal}  baseSignal = cos(time * 4 * pi + pi / 6) x[, 21] = x[, 21] + baseSignal x[, 22] = x[, 22] - baseSignal for (ii in 23:30) {   x[, ii] = x[, ii] + runif(1, -amp, amp) * baseSignal}"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"create-training-and-testing-observations","dir":"Articles","previous_headings":"","what":"Create training and testing observations","title":"Introduction to ZeitZeiger","text":"Now ’ll split dataset training test sets.","code":"idxTrain = 1:round(nObs * 0.6)  xTrain = x[idxTrain, ] timeTrain = time[idxTrain]  xTest = x[-idxTrain, ] timeTest = time[-idxTrain]"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"train-and-test-a-zeitzeiger-predictor","dir":"Articles","previous_headings":"","what":"Train and test a ZeitZeiger predictor","title":"Introduction to ZeitZeiger","text":"ZeitZeiger three main steps: zeitzeigerFit, zeitzeigerSpc, zeitzeigerPredict. function several options, please see help Hughey et al. (2016) details. preferred way use call function separately. lets change parameters later step without re-running earlier steps. zeitzeigerFit uses training data fit periodic smoothing spline behavior feature function time. zeitzeigerSpc uses spline fits calculate sparse principal components (SPCs) features change time. zeitzeigerPredict uses training data SPCs predict corresponding time test observation. two main parameters ZeitZeiger sumabsv, controls amount regularization, nSPC, controls many SPCs used prediction. Alternatively, can run three steps one go using zeitzeiger function, returns list consisting results three functions.","code":"fitResult = zeitzeigerFit(xTrain, timeTrain) spcResult = zeitzeigerSpc(fitResult$xFitMean, fitResult$xFitResid, sumabsv = 1) predResult = zeitzeigerPredict(xTrain, timeTrain, xTest, spcResult, nSpc = 2) zzFit = zeitzeiger(xTrain, timeTrain, xTest, sumabsv = 1, nSpc = 2)"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"plot-the-periodic-spline-fits","dir":"Articles","previous_headings":"","what":"Plot the periodic spline fits","title":"Introduction to ZeitZeiger","text":"looking predictions, ’s good idea check quality spline fits. feature 11, fit looks good. real-world dataset, wouldn’t know observed mean, compare predicted mean observations.","code":"timeRange = seq(0, 1 - 0.01, 0.01) jj = 11  df1 = data.table(timeTrain, xTrain = xTrain[, jj]) df2 = data.table(   timeRange = rep(timeRange, 2),   parameter = rep(c('Observed mean', 'Predicted mean'), each = length(timeRange)),   value = c(predictIntensity(fitResult$xFitMean[jj, , drop = FALSE], timeRange),             2 * cos(timeRange * 2 * pi))) ggplot() +   geom_point(aes(x = timeTrain, y = xTrain), data = df1, shape = 1, size = 2) +   geom_line(aes(x = timeRange, y = value, linetype = parameter), data = df2) +   labs(x = 'Time', y = sprintf('Feature %d', jj)) +   theme_bw() + theme(legend.position = c(0.5, 0.85), legend.title = element_blank())"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"plot-prediction-error-on-the-test-set","dir":"Articles","previous_headings":"","what":"Plot prediction error on the test set","title":"Introduction to ZeitZeiger","text":"can calculate difference predicted time observed time, .e., error, using getCircDiff. function accounts fact time periodic, time = 0 equivalent time = 1. error can range -0.5 0.5. many ways examine prediction accuracy. simple one plot predicted time vs. observed time. Ideally, points lie line y = x. predictions pretty good. couple test observations observed time 0 predicted time slightly less 1, ok.  plot error vs. observed time, see observations small negative error.","code":"dfTest = data.frame(   timeObs = timeTest, timePred = predResult$timePred,   timeError = getCircDiff(predResult$timePred, timeTest)) ggplot(dfTest) +   geom_point(aes(x = timeObs, y = timePred), size = 2, shape = 1) +   geom_abline(slope = 1, intercept = 0, linetype = 'dashed') +   scale_x_continuous(limits = c(0, 1)) + scale_y_continuous(limits = c(0, 1)) +   labs(x = 'Observed time', y = 'Predicted time') + theme_bw() ggplot(dfTest) +   geom_point(aes(x = timeObs, y = timeError), size = 2, shape = 1) +   scale_x_continuous(limits = c(0, 1)) +   scale_y_continuous(limits = c(-0.2, 0.2)) +   labs(x = 'Observed time', y = 'Error') +   theme_bw()"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"plot-a-test-observations-time-dependent-likelihood","dir":"Articles","previous_headings":"","what":"Plot a test observation’s time-dependent likelihood","title":"Introduction to ZeitZeiger","text":"predicted time test observation time maximum likelihood. Another output zeitzeigerPredict, however, likelihood across entire range time. default, likelihood calculated 100 discrete time-points, timeRange defined earlier (predicted time restricted one time-points). observation, notice likelihood starts increasing times slightly less 1, continues increase times greater 0.","code":"obs = 2 dfLike = data.table(timeRange, likelihood = predResult$timeDepLike[obs, 1, ])  dfVert = data.table(   type = c('Observed time', 'Predicted time'),   xint = c(timeTest[obs], predResult$timePred[obs])) ggplot(dfLike) +   geom_point(aes(x = timeRange, y = likelihood), size = 2, shape = 1) +   geom_vline(aes(xintercept = xint, linetype = type), data = dfVert,              show.legend = TRUE) +   scale_linetype_manual(values = c('solid', 'dashed')) +   labs(x = 'Time', y = 'Likelihood') + theme_bw() +   theme(legend.position = c(0.7, 0.8), legend.title = element_blank())"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"run-cross-validation","dir":"Articles","previous_headings":"","what":"Run cross-validation","title":"Introduction to ZeitZeiger","text":"determine best parameters training ZeitZeiger predictor, can run cross-validation. cross-validation functions can process folds parallel, registerDoParallel called beforehand. three steps ZeitZeiger separated, need first randomly assign observation fold, use assignments zeitzeigerFitCv zeitzeigerPredictCv. ’ll run cross-validation three values sumabsv four values nSPC. Typically values sumabsv suffice, nSPC example can range 1 10 (10 default value nTime).","code":"sumabsv = c(1, 1.5, 3) nSpc = 1:4 nFolds = 10 foldid = sample(rep(1:nFolds, length.out = nObs))  fitResultList = zeitzeigerFitCv(x, time, foldid)  spcResultList = list() for (ii in seq_len(length(sumabsv))) {   spcResultList[[ii]] = zeitzeigerSpcCv(fitResultList, sumabsv = sumabsv[ii])}  predResultList = list() for (ii in seq_len(length(sumabsv))) {   predResultList[[ii]] = zeitzeigerPredictCv(     x, time, foldid, spcResultList[[ii]], nSpc = nSpc)}"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"plot-the-error-for-each-set-of-parameter-values","dir":"Articles","previous_headings":"","what":"Plot the error for each set of parameter values","title":"Introduction to ZeitZeiger","text":"plotting, need reorganize output, making data.frame information prediction. Now calculate median absolute error set parameter values. example dataset, best accuracy seems sumabsv = 1 nSpc = 3.","code":"timePredList = lapply(predResultList, function(a) a$timePred)  cvResult = data.table(   do.call(rbind, timePredList),   timeObs = rep(time, length(sumabsv)),   sumabsv = rep(sumabsv, each = length(time)),   obs = rep(1:nObs, length(sumabsv)))  cvResultMelt = melt(   cvResult, id.vars = c('obs', 'timeObs', 'sumabsv'), variable.name = 'nSpc',   value.name = 'timePred', variable.factor = FALSE) cvResultMelt[, nSpc := as.integer(substr(nSpc, 2, 2))] cvResultMelt[, sumabsv := factor(sumabsv)] cvResultMelt[, timeError := getCircDiff(timePred, timeObs)] cvResultMeltGroup =   cvResultMelt[, .(medae = median(abs(timeError))), by = .(sumabsv, nSpc)] ggplot(cvResultMeltGroup) +   geom_point(aes(x = nSpc, y = medae, shape = sumabsv, color = sumabsv), size = 2) +   labs(x = 'Number of SPCs', y = 'Median absolute error') +   theme_bw() + theme(legend.position = c(0.7, 0.7))"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"train-a-model-on-the-full-dataset","dir":"Articles","previous_headings":"","what":"Train a model on the full dataset","title":"Introduction to ZeitZeiger","text":"Now can train predictor full dataset using almost optimal sumabsv (keep things interesting) cross-validation (values nSpc come along free), look ZeitZeiger learned. first three SPCs explain appreciable amount variance features change time. makes sense, accuracy stopped improving got worse nSpc = 4.","code":"fitResultFinal = zeitzeigerFit(x, time) spcResultFinal = zeitzeigerSpc(   fitResultFinal$xFitMean, fitResultFinal$xFitResid, sumabsv = 1.5)  dfVar = data.table(   spc = seq_len(length(spcResultFinal$d)),   propVar = spcResultFinal$d^2 / sum(spcResultFinal$d^2)) ggplot(dfVar) +   geom_point(aes(x = spc, y = propVar), size = 2, shape = 1) +   scale_x_continuous(breaks = seq(1, 10)) +   labs(x = 'SPC', y = 'Proportion of\\nvariance explained') + theme_bw()"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"plot-the-behavior-of-the-spcs-over-time","dir":"Articles","previous_headings":"","what":"Plot the behavior of the SPCs over time","title":"Introduction to ZeitZeiger","text":"Now can project observations feature-space SPC-space, look three SPCs behave time. see SPC corresponds one three signals created dataset. signs reversed, ’s ok. patterns ZeitZeiger using predict time.","code":"z = x %*% spcResultFinal$v[, 1:3] colnames(z) = c('SPC 1', 'SPC 2', 'SPC 3') zMelt = melt(   data.table(z, obs = 1:nObs, Time = time, check.names = FALSE),   id.vars = c('obs', 'Time'), variable.name = 'SPC', value.name = 'Abundance') ggplot(zMelt) +   facet_grid(vars(SPC), scales = 'free_y') +   geom_point(aes(x = Time, y = Abundance), size = 2, shape = 1) + theme_bw()"},{"path":"https://zeitzeiger.hugheylab.org/articles/introduction.html","id":"plot-the-coefficients-of-the-features-for-the-spcs","dir":"Articles","previous_headings":"","what":"Plot the coefficients of the features for the SPCs","title":"Introduction to ZeitZeiger","text":"Finally, can look features contribute SPCs. Sure enough, ZeitZeiger found features strong signal. addition, sign value coefficient feature respective SPC correspond simulated.","code":"v = data.frame(spcResultFinal$v[, 1:3]) colnames(v) = c('SPC 1', 'SPC 2', 'SPC 3') v = v[apply(v, 1, function(r) any(r != 0)), ] v[v == 0] = NA v = v[do.call(order, v), ] v$feature = rownames(v) vMelt = melt(setDT(v), id.vars = 'feature', variable.name = 'spc',              value.name = 'Coefficient') vMelt[, feature := factor(feature, rev(v$feature))] ggplot(vMelt) +   facet_wrap(vars(spc), nrow = 1) +   geom_bar(aes(x = feature, y = Coefficient), stat = 'identity') +   labs(x = 'Feature') + coord_flip() +   theme_bw() + theme(panel.spacing = unit(1.2, 'lines')) #> Warning: Removed 50 rows containing missing values (`position_stack()`)."},{"path":"https://zeitzeiger.hugheylab.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jake Hughey. Author, maintainer.","code":""},{"path":"https://zeitzeiger.hugheylab.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hughey J (2022). zeitzeiger: Regularized Supervised Learning Data Rhythmic Systems. https://zeitzeiger.hugheylab.org, https://github.com/hugheylab/zeitzeiger.","code":"@Manual{,   title = {zeitzeiger: Regularized Supervised Learning for Data from Rhythmic Systems},   author = {Jake Hughey},   year = {2022},   note = {https://zeitzeiger.hugheylab.org, https://github.com/hugheylab/zeitzeiger}, }"},{"path":"https://zeitzeiger.hugheylab.org/index.html","id":"zeitzeiger","dir":"","previous_headings":"","what":"Regularized Supervised Learning for Data from Rhythmic Systems","title":"Regularized Supervised Learning for Data from Rhythmic Systems","text":"zeitzeiger package regularized supervised learning high-dimensional data oscillatory system. zeitzeiger can quantify rhythmic behavior, make accurate predictions, identify major patterns important features, detect oscillator perturbed. Update (Nov 2018): ZeitZeiger now uses limma internally, makes training (previously slowest step far) 250x faster. Additional optimizations made calculation sparse principal components 6x faster, prediction 20% faster. details method see used analyze circadian gene expression mice, check Hughey et al. (2016) accompanying results. see used zeitzeiger analyze phasing circadian clocks humans mammals, check Hughey Butte (2016) accompanying results. see used zeitzeiger predict circadian time gene expression human blood, check Hughey (2017) accompanying results.","code":""},{"path":"https://zeitzeiger.hugheylab.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regularized Supervised Learning for Data from Rhythmic Systems","text":"Install BiocManager. use RStudio, go Tools → Global Options… → Packages → Add… (Secondary repositories), enter: Name: hugheylab Url: https://hugheylab.github.io/drat/ . can install update package entering: Alternatively, can install update package entering:","code":"if (!requireNamespace('BiocManager', quietly = TRUE))   install.packages('BiocManager') BiocManager::install('zeitzeiger') BiocManager::install('zeitzeiger', site_repository = 'https://hugheylab.github.io/drat/')"},{"path":"https://zeitzeiger.hugheylab.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Regularized Supervised Learning for Data from Rhythmic Systems","text":"introduction package, read vignette. detailed help specific functions, check reference documentation.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/getCircDiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate circular difference — getCircDiff","title":"Calculate circular difference — getCircDiff","text":"Calculate circular difference.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/getCircDiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate circular difference — getCircDiff","text":"","code":"getCircDiff(x, y, period = 1, towardZero = TRUE)"},{"path":"https://zeitzeiger.hugheylab.org/reference/getCircDiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate circular difference — getCircDiff","text":"x Numeric vector matrix. y Numeric vector matrix. period Period periodic variable. towardZero TRUE, returned values -period / 2 period / 2. FALSE, returned values 0 period.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/getCircDiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate circular difference — getCircDiff","text":"Vector matrix corresponding x - y.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/predictIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate time-dependent mean — predictIntensity","title":"Calculate time-dependent mean — predictIntensity","text":"Calculate expected value feature.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/predictIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate time-dependent mean — predictIntensity","text":"","code":"predictIntensity(fitCoef, time, period = 1, knots = NULL)"},{"path":"https://zeitzeiger.hugheylab.org/reference/predictIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate time-dependent mean — predictIntensity","text":"fitCoef Matrix coefficients spline fits, rows correspond features columns correspond variables model. time Vector values periodic variable observations, 0 corresponds lowest possible value 1 corresponds highest possible value. period Period periodic variable. knots Optional vector knots. argument designed internal use.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/predictIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate time-dependent mean — predictIntensity","text":"Matrix predicted measurements, rows correspond time-points columns correspond features.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeiger.html","id":null,"dir":"Reference","previous_headings":"","what":"Train and test a ZeitZeiger predictor — zeitzeiger","title":"Train and test a ZeitZeiger predictor — zeitzeiger","text":"Train test ZeitZeiger predictor, calling necessary functions.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeiger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train and test a ZeitZeiger predictor — zeitzeiger","text":"","code":"zeitzeiger(   xTrain,   timeTrain,   xTest,   nKnots = 3,   nTime = 10,   useSpc = TRUE,   sumabsv = 2,   orth = TRUE,   nSpc = 2,   timeRange = seq(0, 1 - 0.01, 0.01) )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeiger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train and test a ZeitZeiger predictor — zeitzeiger","text":"xTrain Matrix measurements training data, observations rows features columns. timeTrain Vector values periodic variable training observations, 0 corresponds lowest possible value 1 corresponds highest possible value. xTest Matrix measurements test data, observations rows features columns. nKnots Number internal knots use periodic smoothing spline. nTime Number time-points discretize time-dependent behavior feature. Corresponds number rows matri SPCs calculated. useSpc Logical indicating whether use PMA::SPC() (default) base::svd(). sumabsv L1-constraint SPCs, passed PMA::SPC(). orth Logical indicating whether require left singular vectors orthogonal , passed PMA::SPC(). nSpc Vector number SPCs use prediction. NA (default), nSpc become 1:K, K number SPCs spcResult. value nSpc correspond one prediction test observation. value 2 means prediction based first 2 SPCs. timeRange Vector values periodic variable calculate likelihood. time highest likelihood used initial value MLE optimizer.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeiger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train and test a ZeitZeiger predictor — zeitzeiger","text":"fitResult Output zeitzeigerFit() spcResult Output zeitzeigerSpc() predResult Output zeitzeigerPredict()","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Train and test a ZeitZeiger predictor, accounting for batch effects — zeitzeigerBatch","title":"Train and test a ZeitZeiger predictor, accounting for batch effects — zeitzeigerBatch","text":"Train test predictor multiple datasets independently, using sva::ComBat() correct batch effects prior running zeitzeiger().","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerBatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train and test a ZeitZeiger predictor, accounting for batch effects — zeitzeigerBatch","text":"","code":"zeitzeigerBatch(   ematList,   trainStudyNames,   sampleMetadata,   studyColname,   batchColname,   timeColname,   nKnots = 3,   nTime = 10,   useSpc = TRUE,   sumabsv = 2,   orth = TRUE,   nSpc = 2,   timeRange = seq(0, 1 - 0.01, 0.01),   covariateName = NA,   featuresExclude = NULL,   dopar = TRUE )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train and test a ZeitZeiger predictor, accounting for batch effects — zeitzeigerBatch","text":"ematList Named list matrices measurements, one dataset, training, others testing. matrix rownames corresponding sample names colnames corresponding feature names. trainStudyNames Character vector names ematList corresponding datasets training. sampleMetadata data.frame containing relevant information sample across datasets. Must column named sample. studyColname Name column sampleMetdata contains information dataset sample belongs . batchColname Name column sampleMetdata contains information dataset sample belongs . correspond names ematList, often studyColname, . timeColname Name column sampleMetdata contains values periodic variable. nKnots Number internal knots use periodic smoothing spline. nTime Number time-points discretize time-dependent behavior feature. Corresponds number rows matrix SPCs calculated. useSpc Logical indicating whether use PMA::SPC() (default) base::svd(). sumabsv L1-constraint SPCs, passed PMA::SPC(). orth Logical indicating whether require left singular vectors orthogonal , passed PMA::SPC(). nSpc Vector number SPCs use prediction. NA (default), nSpc become 1:K, K number SPCs spcResult. value nSpc correspond one prediction test observation. value 2 means prediction based first 2 SPCs. timeRange Vector values periodic variable calculate likelihood. time highest likelihood used initial value MLE optimizer. covariateName Name column(s) sampleMetadata containing information covariates sva::ComBat(), besides batchColname. NA (default), covariates. featuresExclude Named list character vectors corresponding features exclude used prediction respective test datasets. dopar Logical indicating whether process folds parallel. Use doParallel::registerDoParallel() register parallel backend.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerBatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train and test a ZeitZeiger predictor, accounting for batch effects — zeitzeigerBatch","text":"spcResultList List output zeitzeigerSpc(), one test dataset. timeDepLike 3-D array likelihood, dimensions test observation (across datasets), element nSpc, element timeRange. mleFit List (element nSpc) lists (test observation) mle2 objects. timePred Matrix predicted times test observations values nSpc.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleLikelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine predictions into an ensemble using the log-likelihood — zeitzeigerEnsembleLikelihood","title":"Combine predictions into an ensemble using the log-likelihood — zeitzeigerEnsembleLikelihood","text":"Make predictions finding maximum sum log-likelihoods.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleLikelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine predictions into an ensemble using the log-likelihood — zeitzeigerEnsembleLikelihood","text":"","code":"zeitzeigerEnsembleLikelihood(timeDepLike, timeRange)"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleLikelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine predictions into an ensemble using the log-likelihood — zeitzeigerEnsembleLikelihood","text":"timeDepLike List 3-D array time-dependent likelihood zeitzeigerPredict(). list, element (member ensemble) matrix rows correspond observations columns correspond time-points. 3-D array, three dimensions correspond observations, time-points, members ensemble. timeRange Vector time-points likelihood calculated.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleLikelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine predictions into an ensemble using the log-likelihood — zeitzeigerEnsembleLikelihood","text":"timeDepLike Matrix likelihood observations time-points. timePred Vector predicted times. predicted time element timeRange.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleMean.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine predictions into an ensemble using the circular mean — zeitzeigerEnsembleMean","title":"Combine predictions into an ensemble using the circular mean — zeitzeigerEnsembleMean","text":"Make predictions calculating circular mean predictions across members ensemble.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleMean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine predictions into an ensemble using the circular mean — zeitzeigerEnsembleMean","text":"","code":"zeitzeigerEnsembleMean(timePredInput, timeMax = 1, naRm = TRUE)"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleMean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine predictions into an ensemble using the circular mean — zeitzeigerEnsembleMean","text":"timePredInput Matrix predicted times rows correspond observations columns correspond members ensemble. timeMax Maximum value periodic variable, .e., value equivalent zero. naRm Logical indicating whether NA values removed calculation.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerEnsembleMean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine predictions into an ensemble using the circular mean — zeitzeigerEnsembleMean","text":"Matrix row observation columns predicted time normalized magnitude circular mean. latter can range 0 1, 1 indicating perfect agreement among members ensemble.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a periodic spline for each feature — zeitzeigerFit","title":"Fit a periodic spline for each feature — zeitzeigerFit","text":"Fit periodic smoothing spline measurements feature function periodic variable.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a periodic spline for each feature — zeitzeigerFit","text":"","code":"zeitzeigerFit(x, time, nKnots = 3)"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a periodic spline for each feature — zeitzeigerFit","text":"x Matrix measurements, observations rows features columns. Missing values allowed. time Vector values periodic variable observations, 0 corresponds lowest possible value 1 corresponds highest possible value. nKnots Number internal knots use periodic smoothing spline.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a periodic spline for each feature — zeitzeigerFit","text":"xFitMean Matrix coefficients, rows correspond features columns correspond variables fit. xFitResid Vector root mean square residuals, length x.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFitCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a periodic spline for each feature on cross-validation — zeitzeigerFitCv","title":"Fit a periodic spline for each feature on cross-validation — zeitzeigerFitCv","text":"Fit periodic spline feature fold cross-validation.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFitCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a periodic spline for each feature on cross-validation — zeitzeigerFitCv","text":"","code":"zeitzeigerFitCv(x, time, foldid, nKnots = 3)"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFitCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a periodic spline for each feature on cross-validation — zeitzeigerFitCv","text":"x Matrix measurements, observations rows features columns. time Vector values periodic variable observations, 0 corresponds lowest possible value 1 corresponds highest possible value. foldid Vector values indicating fold observation belongs. nKnots Number internal knots use periodic smoothing spline.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerFitCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a periodic spline for each feature on cross-validation — zeitzeigerFitCv","text":"list consisting result zeitzeigerFit() fold.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict corresponding time for test observations — zeitzeigerPredict","title":"Predict corresponding time for test observations — zeitzeigerPredict","text":"Predict value periodic variable test observations given training data SPCs.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict corresponding time for test observations — zeitzeigerPredict","text":"","code":"zeitzeigerPredict(   xTrain,   timeTrain,   xTest,   spcResult,   nKnots = 3,   nSpc = NA,   timeRange = seq(0, 1 - 0.01, 0.01) )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict corresponding time for test observations — zeitzeigerPredict","text":"xTrain Matrix measurements training data, observations rows features columns. timeTrain Vector values periodic variable training observations, 0 corresponds lowest possible value 1 corresponds highest possible value. xTest Matrix measurements test data, observations rows features columns. spcResult Output zeitzeigerSpc(). nKnots Number internal knots use periodic smoothing spline. nSpc Vector number SPCs use prediction. NA (default), nSpc become 1:K, K number SPCs spcResult. value nSpc correspond one prediction test observation. value 2 means prediction based first 2 SPCs. timeRange Vector values periodic variable calculate likelihood. time highest likelihood used initial value MLE optimizer.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict corresponding time for test observations — zeitzeigerPredict","text":"timeDepLike 3-D array likelihood, dimensions test observation, element nSpc, element timeRange. mleFit List (element nSpc) lists (test observation) mle2 objects. timePred Matrix predicted times test observations values nSpc.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict corresponding time for observations on cross-validation — zeitzeigerPredictCv","title":"Predict corresponding time for observations on cross-validation — zeitzeigerPredictCv","text":"Make predictions observation fold cross-validation.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict corresponding time for observations on cross-validation — zeitzeigerPredictCv","text":"","code":"zeitzeigerPredictCv(   x,   time,   foldid,   spcResultList,   nKnots = 3,   nSpc = NA,   timeRange = seq(0, 1 - 0.01, 0.01),   dopar = TRUE )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict corresponding time for observations on cross-validation — zeitzeigerPredictCv","text":"x Matrix measurements, observations rows features columns. time Vector values periodic variable observations, 0 corresponds lowest possible value 1 corresponds highest possible value. foldid Vector values indicating fold observation belongs. spcResultList Output zeitzeigerSpcCv(). nKnots Number internal knots use periodic smoothing spline. nSpc Vector number SPCs use prediction. NA (default), nSpc become 1:K, K number SPCs spcResult. value nSpc correspond one prediction test observation. value 2 means prediction based first 2 SPCs. timeRange Vector values periodic variable calculate likelihood. time highest likelihood used initial value MLE optimizer. dopar Logical indicating whether process folds parallel. Use doParallel::registerDoParallel() register parallel backend.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict corresponding time for observations on cross-validation — zeitzeigerPredictCv","text":"list structure zeitzeigerPredict(), combining results fold cross-validation. timeDepLike 3-D array likelihood, dimensions observation, element nSpc, element timeRange. mleFit List (element nSpc) lists (observation) mle2 objects. timePred Matrix predicted times observations values nSpc.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict corresponding time for groups of test observations — zeitzeigerPredictGroup","title":"Predict corresponding time for groups of test observations — zeitzeigerPredictGroup","text":"Predict value periodic variable group test observations, amount time observation group known.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict corresponding time for groups of test observations — zeitzeigerPredictGroup","text":"","code":"zeitzeigerPredictGroup(   xTrain,   timeTrain,   xTest,   groupTest,   spcResult,   nKnots = 3,   nSpc = NA,   timeRange = seq(0, 1 - 0.01, 0.01) )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict corresponding time for groups of test observations — zeitzeigerPredictGroup","text":"xTrain Matrix measurements training data, observations rows features columns. timeTrain Vector values periodic variable training observations, 0 corresponds lowest possible value 1 corresponds highest possible value. xTest Matrix measurements test data, observations rows features columns. groupTest data.frame one row per observation xTest, columns group timeDiff. Observations group value group. Within group, value timeDiff correspond amount time observation reference time. Typically, timeDiff equal zero one observation per group. spcResult Output zeitzeigerSpc(). nKnots Number internal knots use periodic smoothing spline. nSpc Vector number SPCs use prediction. NA (default), nSpc become 1:K, K number SPCs spcResult. value nSpc correspond one prediction test observation. value 2 means prediction based first 2 SPCs. timeRange Vector values periodic variable calculate likelihood. time highest likelihood used initial value MLE optimizer.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict corresponding time for groups of test observations — zeitzeigerPredictGroup","text":"list following elements, groups sorted names. timeDepLike 3-D array likelihood, dimensions group test observations, element nSpc, element timeRange. mleFit List (element nSpc) lists (group test observations) mle2 objects. timePred Matrix predicted times group test observations values nSpc.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroupCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict corresponding time for groups of observations on cross-validation — zeitzeigerPredictGroupCv","title":"Predict corresponding time for groups of observations on cross-validation — zeitzeigerPredictGroupCv","text":"Predict corresponding time group observations cross-validation. Thus, fold equivalent group.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroupCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict corresponding time for groups of observations on cross-validation — zeitzeigerPredictGroupCv","text":"","code":"zeitzeigerPredictGroupCv(   x,   time,   foldid,   spcResultList,   nKnots = 3,   nSpc = NA,   timeRange = seq(0, 1 - 0.01, 0.01),   dopar = TRUE )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroupCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict corresponding time for groups of observations on cross-validation — zeitzeigerPredictGroupCv","text":"x Matrix measurements, observations rows features columns. time Vector values periodic variable observations, 0 corresponds lowest possible value 1 corresponds highest possible value. foldid Vector values indicating fold observation belongs. spcResultList Result zeitzeigerSpcCv(). nKnots Number internal knots use periodic smoothing spline. nSpc Vector number SPCs use prediction. NA (default), nSpc become 1:K, K number SPCs spcResult. value nSpc correspond one prediction test observation. value 2 means prediction based first 2 SPCs. timeRange Vector values periodic variable calculate likelihood. time highest likelihood used initial value MLE optimizer. dopar Logical indicating whether process folds parallel. Use doParallel::registerDoParallel() register parallel backend.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerPredictGroupCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict corresponding time for groups of observations on cross-validation — zeitzeigerPredictGroupCv","text":"list structure zeitzeigerPredictGroup, combining results fold cross-validation. Folds (.e, groups) sorted foldid. timeDepLike 3-D array likelihood, dimensions fold, element nSpc, element timeRange. mleFit List (element nSpc) lists (fold) mle2 objects. timePred Matrix predicted times folds values nSpc.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sparse principal components of time-dependent variation — zeitzeigerSpc","title":"Calculate sparse principal components of time-dependent variation — zeitzeigerSpc","text":"Calculate SPCs given time-dependent means residuals zeitzeigerFit().","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sparse principal components of time-dependent variation — zeitzeigerSpc","text":"","code":"zeitzeigerSpc(   xFitMean,   xFitResid,   nTime = 10,   useSpc = TRUE,   sumabsv = 1,   orth = TRUE,   ... )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sparse principal components of time-dependent variation — zeitzeigerSpc","text":"xFitMean List bigsplines, length number features. xFitResid Matrix residuals, dimensions observations features. nTime Number time-points discretize time-dependent behavior feature. Corresponds number rows matrix SPCs calculated. useSpc Logical indicating whether use PMA::SPC() (default) base::svd(). sumabsv L1-constraint SPCs, passed PMA::SPC(). orth Logical indicating whether require left singular vectors orthogonal , passed PMA::SPC(). ... arguments passed PMA::SPC().","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sparse principal components of time-dependent variation — zeitzeigerSpc","text":"Output PMA::SPC(), unless useSpc FALSE, output base::svd().","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpcCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sparse principal components of time-dependent variation on cross-validation — zeitzeigerSpcCv","title":"Calculate sparse principal components of time-dependent variation on cross-validation — zeitzeigerSpcCv","text":"Calculate SPCs fold cross-validation.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpcCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sparse principal components of time-dependent variation on cross-validation — zeitzeigerSpcCv","text":"","code":"zeitzeigerSpcCv(   fitResultList,   nTime = 10,   useSpc = TRUE,   sumabsv = 1,   orth = TRUE,   dopar = TRUE )"},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpcCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sparse principal components of time-dependent variation on cross-validation — zeitzeigerSpcCv","text":"fitResultList Output zeitzeigerFitCv(). nTime Number time-points discretize time-dependent behavior feature. Corresponds number rows matrix SPCs calculated. useSpc Logical indicating whether use SPC (default) svd. sumabsv L1-constraint SPCs, passed SPC. orth Logical indicating whether require left singular vectors orthogonal , passed SPC. dopar Logical indicating whether process folds parallel. Use doParallel::registerDoParallel() register parallel backend.","code":""},{"path":"https://zeitzeiger.hugheylab.org/reference/zeitzeigerSpcCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sparse principal components of time-dependent variation on cross-validation — zeitzeigerSpcCv","text":"list consisting result zeitzeigerSpc() fold.","code":""},{"path":[]},{"path":"https://zeitzeiger.hugheylab.org/news/index.html","id":"zeitzeiger-212","dir":"Changelog","previous_headings":"","what":"zeitzeiger 2.1.2","title":"zeitzeiger 2.1.2","text":"Updated code style conform lab style linter.","code":""},{"path":"https://zeitzeiger.hugheylab.org/news/index.html","id":"zeitzeiger-211","dir":"Changelog","previous_headings":"","what":"zeitzeiger 2.1.1","title":"zeitzeiger 2.1.1","text":"Removed formerly deprecated functions.","code":""},{"path":"https://zeitzeiger.hugheylab.org/news/index.html","id":"zeitzeiger-210","dir":"Changelog","previous_headings":"","what":"zeitzeiger 2.1.0","title":"zeitzeiger 2.1.0","text":"Switched data.table.","code":""},{"path":"https://zeitzeiger.hugheylab.org/news/index.html","id":"zeitzeiger-204","dir":"Changelog","previous_headings":"","what":"zeitzeiger 2.0.4","title":"zeitzeiger 2.0.4","text":"Removed dependency metapredict package.","code":""},{"path":"https://zeitzeiger.hugheylab.org/news/index.html","id":"zeitzeiger-203","dir":"Changelog","previous_headings":"","what":"zeitzeiger 2.0.3","title":"zeitzeiger 2.0.3","text":"Revised code need globalVariables() order pass R CMD check without notes.","code":""},{"path":"https://zeitzeiger.hugheylab.org/news/index.html","id":"zeitzeiger-202","dir":"Changelog","previous_headings":"","what":"zeitzeiger 2.0.2","title":"zeitzeiger 2.0.2","text":"Added pkgdown site. Updated documentation.","code":""}]
